- is_mobile = params[:mobile]
- is_classic = params[:classic]


-content_for :custom_javascript do

  = javascript_include_merged :show

- show_close_request_form = !@item.closed && logged_in? && @item.can_be_requested_to_close_by?(current_user)
- show_open_request_form = @item.closed && logged_in? && @item.can_be_requested_to_open_by?(current_user)

- if logged_in?
  - if current_user.mod_of?(current_group) && @item.closed
    -# show_close_request_form = (@item.close_reason.user == current_user.id)
    = "closed"
  - @flag = current_user.has_flagged?(@item) || Flag.new

- @flag ||= Flag.new

- if show_open_request_form
  - @open_request = current_user.has_requested_to_open?(@item) || OpenRequest.new

- if show_close_request_form
  - @close_request = @item.close_requests.detect{ |rq| rq.user_id == current_user.id } || CloseRequest.new(:reason => "dupe")

- item_body = find_and_preserve(shapado_auto_link(markdown(@item.body.present? ? @item.body : @item.title)))

- content_for :head do
  = render :partial => "meta_include", :locals => {:item => @item}

-# source = item_path(@doctype, @item)
= error_messages_for 'answer'


 
- content_for :main do



  - if current_group.group_type == "mobile"
    = render :partial => "show_mobile", :locals=> {:item => @item, :doctype => @doctype}

  - else is_classic || current_group.group_type == "classic"
    = render :partial => "show_classic", :locals=> {:item => @item, :doctype => @doctype}







